{% set i =  groups[bra ~ '-mysql'].index(inventory_hostname) %}

# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.5/en/server-configuration-defaults.html

[mysqld]

#external-locking = FALSE                                   # 5.7 不作用, 避免外部锁定(减少出错几率，增加稳定性)
#skip-name-resolv                                           # 5.7 不作用, 禁止外部连接进行DNS解析



#########################基本设置#########################
server_id = {{ groups[bra ~ '-mysql'].index(inventory_hostname) + 1 }}
#
# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
innodb_buffer_pool_size = 128M

#
# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M

datadir = {{ MYSQL.DATADIR }}
socket = /var/lib/mysql/mysql.sock
character-set-server = utf8mb4
collation-server = utf8mb4_general_ci                         # 设置校对规则
symbolic-links = 0                                            # Disabling symbolic-links is recommended to prevent assorted security risks
lower_case_table_names = 1

# Recommended in standard MySQL setup
#sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
bind-address = {{ MYSQL.BIND_ADDRESS }}

{% if mysql_version == '5.7' or mysql_version == '8.0' or mysql_version == '8.1' %}
log-error = /var/log/mysqld.log
pid-file = /var/run/mysqld/mysqld.pid
{% endif %}

{% if mysql_version == '5.7'%}
validate-password = 0
{% elif mysql_version == '8.0' or mysql_version == '8.1' %}
validate_password.dictionary_file = /usr/share/dict/words
validate_password.length = 4
validate_password.policy = 0
validate_password.number_count = 1
{% endif %}

{% if mysql_version == '5.5' or mysql_version == '5.6' %}
[mysqld_safe]
log-error = /var/log/mysqld.log
pid-file = /var/run/mysqld/mysqld.pid
{% endif %}

######################### Bin log 相关 - GTID MODE #########################
{% if (mysql_version == '5.7' or mysql_version == '8.0') and (MYSQL.GTID_MODE == 'yes' or MYSQL.GTID_MODE == 1 or MYSQL.GTID_MODE == true )%}
gtid_executed_compression_period = 1000                      
gtid_mode = on                     
enforce_gtid_consistency = on
{% endif %}

############################ Bin log 相关 - 其他 ############################
log-bin = mysql-bin                    #开启二进制日志                  
log-bin-index = mysql-bin.index      
log-slave-updates = 1                  #将从服务器从主服务器收到的更新记入到从服务器自己的二进制日志文件中                 
binlog_format = row
binlog-cache-size = 32M                #设置二进制日志缓存大小
sync_binlog = 1                        #控制binlog的写入频率。每执行多少次事务写入一次(这个参数性能消耗很大，但可减小MySQL崩溃造成的损失) 
auto_increment_offset = 1              #这个参数一般用在主主同步中，用来错开自增值, 防止键值冲突
auto_increment_increment = 1           #这个参数一般用在主主同步中，用来错开自增值, 防止键值冲突
max_binlog_cache_size = 8M             #最大的二进制Cache日志缓冲尺寸
max_binlog_size = 1G                   #单个二进制日志文件的最大值，默认1G，最大1G
expire_logs_days = 7                   #二进制日志自动删除的天数，默认值为0,表示“没有自动删除”，启动时和二进制日志循环时可能删除      
log_bin_trust_function_creators = 1    #将函数复制到slave  

{% for CREATE_DATABASE in MYSQL.CREATE_DATABASES %}
binlog-do-db = {{ CREATE_DATABASE }}
{% endfor %}
binlog-ignore-db = information_schema
binlog-ignore-db = performace_schema
binlog-ignore-db = sys

# 二级 master 使用 BACKHOLE engine , 在 二级 master 看不见资料的！！！！
{% if mysql_ha == 'master-master-slave' and groups[bra ~ '-mysql'].index(inventory_hostname) + 1 == 2 and MYSQL.HOSTS[i].ENGINE is undefined %}
default_storage_engine = BLACKHOLE
{% else %}
default_storage_engine = {{ MYSQL.HOSTS[i].ENGINE }}
{% endif %}

############################ Relay log 相关 ############################
{% if groups[bra ~ '-mysql'].index(inventory_hostname) + 1 >= 2 %}
relay-log = mysql-relay                                      # relay目录
relay-log-info-file = mysql-relay.info                       # info目录
slave-skip-errors = 1007,1008,1032,1062                      # 跳过主从复制时的错误
read-only = 1                                                # GRANT 含 SUPER 的 才可以 改寫 db 
#master-connect-retry = 30                                   # 5.7 不作用, 主从复制丢失，重连间隔时间，默认60s
{% endif %}

############################# 连接相关 #############################
connect_timeout = 60
wait_timeout = 28800
max_connections = 100000
max_allowed_packet = 64M
max_connect_errors = 1000
back_log = 1000                                          # 指出在MySQL暂时停止响应新请求之前，短时间内的多少个请求
open_files_limit = 1024                                  # 打开文件的最大个数，如果出现too mantopen files之类的就需要调整该值了
max_allowed_packet = 8M                                  # 服务器一次能处理的最大的查询包的值
wait_timeout = 360                                       # 指定一个请求的最大连接时间
interactive_timeout = 360                                # 连接保持活动的时间
#innodb_lock_wait_timeout = 15;

######################### General Log 相关 #########################
{% if groups[bra ~ '-mysql'].index(inventory_hostname) + 1 == 1 %}
general_log = on                                         # 记录所有 DDL, DML, DCL, 语句
general_log_file = mysql-general.log
{% endif %}


[mysqldump]
user = {{ MYSQL.HOSTS[i].CONNECTIONS[0]['USER'] }}
password = {{ MYSQL.HOSTS[i].CONNECTIONS[0]['PASSWORD'] }}

[client]
user = {{ MYSQL.HOSTS[i].CONNECTIONS[0]['USER'] }}
password = {{ MYSQL.HOSTS[i].CONNECTIONS[0]['PASSWORD'] }}
# default-character-set = utf8mb4                        # 5.7 不作用, 

[mysql]
no-auto-rehash                                           # 仅允许使用键值的updates和deletes
